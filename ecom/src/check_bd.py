# src.check_bd.py

from sqlalchemy import text
import pandas as pd
from tabulate import tabulate


def check_table_exists(engine, table_name):
    with engine.connect() as conn:
        result = conn.execute(text(f"SELECT to_regclass('{table_name}');"))
        return result.fetchone()[0] is not None


def check_row_count(engine, table_name, expected_count):
    with engine.connect() as conn:
        db_count = conn.execute(text(f"SELECT COUNT(*) FROM {table_name};")).scalar()
        return db_count == expected_count


def check_missing_values(engine, table_name, df):
    with engine.connect() as conn:
        for col in df.columns:
            db_nulls = conn.execute(text(
                f"SELECT COUNT(*) FROM {table_name} WHERE {col} IS NULL;"
            )).scalar()
            df_nulls = df[col].isnull().sum()
            if db_nulls != df_nulls:
                return False
    return True


def run_validation(df_dict, engine):
    print("üìå –°—Ç–∞—Ä—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏...")
    results = []

    for table_name, df in df_dict.items():
        result = {
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã": table_name,
            "–ù–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã": "‚úÖ" if check_table_exists(engine, table_name) else "‚ùå",
            "–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫": "‚úÖ" if check_row_count(engine, table_name, len(df)) else "‚ùå",
            "–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤": "‚úÖ" if check_missing_values(engine, table_name, df) else "‚ùå",
        }
        results.append(result)

    report = pd.DataFrame(results)
    
    issues = report[
        (report['–ù–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã'] != "‚úÖ") |
        (report['–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫'] != "‚úÖ") |
        (report['–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤'] != "‚úÖ") 
    ]
    
    if issues.empty:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    else:
        print("\n‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
    
    print("\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–æ–Ω–µ–Ω–∞.")
    print()
    return report
